Prim's Algorithm
    uses greedy approach
    we start with any node and start making MST
    the tree grows until n-1 edges are formed

        1
       /  \
      6    \
     /      \
    5 - 0 -- 2
     \ /    /
      4 -- 3

    0    1   2    3    4   5   6
0   0    0   8    0    13  17  0   
1   0    0   20   0    0   0   6
2   8    20  0    11   0   0   0
3   0    0   11   0    12  0   0
4   13   0   0    12   0   15  0
5   17   0   0    0    15  0   18
6   0    6   0    0    0   18  0  

Make two arrays:
Not included in MST
    V = {0,2,3,4,5,6}
Included in MST
    A = {1}

Explore options and find the min.
    A{1}
        1->2 = 20
        1->6 = 6
        6 < 20
    V = {0,2,3,4,5}
    A = {1,6}

    A{6}
        Used : 6->1 = 6
        6->5 = 18
    V = {0,2,3,4}
    A = {1,5,6}

    A{5}
        5->0 = 17
        5->4 = 15
        Used: 5->6 = 18
        15 < 17 
    V = {0,2,3} 
    A = {1,4,5,6}

    A{4}
        4->0 = 13
        4->3 = 12 
        4->5 = 15
        12 < 13 < 15
    V = {0,2}
    A = {1,3,4,5,6}

    A{3}
        Used: 3->4
        3->2 = 11
    V = {0}
    A = {1,2,3,4,5,6}

    A{2}
        2->0 = 8
        2->1 = 20
        Used: 2->3 = 11
        8 < 20
    V = {}
    A = {0,1,2,3,4,5,6}
Stop

Cost = 6 + 18 + 15 + 12 + 11 + 8